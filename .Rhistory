setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cache <- makeVector()
cache
cachemean <- cachemean(cache)
cachemean
test <- runif(10)
test
cache$set(test)
cache
cachemean(test)
cachemean(test)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
test <- runif(10)
makeVector.set(test)
makeVector$set(test)
makeVector(test)
test
tv <- makeVector(test)
tv
tv$get
tv.get()
tv$get()
tv$getmean()
cachemean(tv)
tv$getmean()
tv2 <- makeVector(rnorm(10))
tv2$get()
cachemean(tv2)
tv1$getmean
tv@getmean()
tv$getmean()
tv2$getmean()
?inverse
??inverse
cbind(runif(5), runif(5))
cbind(runif(2), runif(2))
solve(cbind(runif(2), runif(2)))
solve(cbind(runif(2), runif(3)))
solve(cbind(runif(3), runif(3)))
sm <- matrix(runif(9), 3, 3)
sm
ncol(sm)
ncol(sm) == nrow(sm)
class(sm)
class(sm) == 'matrix'
error("1")
?message
stop("1")
sm_copy <- sm
sm_copy <- sm.copy
sm_copy <- sm.copy()
sm_copy
sm == sm_copy
matequal(sm, sm_copy)
?matequal
??matequal
!all(sm==sm_copy)
makeCacheMatrix <- function(x = matrix()) {
inverseValue <- NULL
setMatrix <- function(y) {
if (is.matrix(y)) {
stop("The parameter x must be matrix !")
} else if (ncol(y) != nrow(y)) {
stop("The parameter x must be a square invertible matrix !")
}
x <<- y
inverseValue <<- NULL
}
getMatrix <- function() x
setInverse <- function(inverse) inverseValue <<- inverse
getInverse <- function() inverseValue
list(setMatrix = setMatrix,
getMatrix = getMatrix,
setInverse = setInverse,
getInverse = getInverse)
}
cacheSolve <- function(x, ...) {
inverseValue <- x$getInverse()
if(!is.null(inverseValue)) {
message("getting cached data")
return(inverseValue)
}
data <- x$getMatrix()
inverseValue <- solve(data, ...)
x$setInverse(inverseValue)
inverseValue
}
testm <- makeCacheMatrix(tv)
cacheSolve(testtm)
cacheSolve(testm)
testm$getMatrix()
testm$getMatrix
testm$getMatrix()
makeCacheMatrix <- function(x = matrix()) {
inverseValue <- NULL
setMatrix <- function(y) {
if (is.matrix(y)) {
stop("The parameter x must be matrix !")
} else if (ncol(y) != nrow(y)) {
stop("The parameter x must be a square invertible matrix !")
}
x <<- y
inverseValue <<- NULL
}
getMatrix <- function() x
setInverse <- function(inverse) inverseValue <<- inverse
getInverse <- function() inverseValue
list(setMatrix = setMatrix,
getMatrix = getMatrix,
setInverse = setInverse,
getInverse = getInverse)
}
m <- matrix(runif(9) , 3, 3)
m
cm <- makeCacheMatrix(m)
cm
cm$getMatrix()
cacheSolve <- function(x, ...) {
inverseValue <- x$getInverse()
if(!is.null(inverseValue)) {
message("getting cached data")
return(inverseValue)
}
data <- x$getMatrix()
inverseValue <- solve(data, ...)
x$setInverse(inverseValue)
inverseValue
}
cacheSolve(cm)
cm$getInverse()
m2 <- matrix(runif(9) , 3, 3)
cm$setMatrix(m2)
is.matrix(m2)
makeCacheMatrix <- function(x = matrix()) {
inverseValue <- NULL
setMatrix <- function(y) {
if (!is.matrix(y)) {
stop("The parameter x must be matrix !")
} else if (ncol(y) != nrow(y)) {
stop("The parameter x must be a square invertible matrix !")
}
x <<- y
inverseValue <<- NULL
}
getMatrix <- function() x
setInverse <- function(inverse) inverseValue <<- inverse
getInverse <- function() inverseValue
list(setMatrix = setMatrix,
getMatrix = getMatrix,
setInverse = setInverse,
getInverse = getInverse)
}
cm <- makeCacheMatrix(m)
cacheSolve(cm)
cm$setMatrix(m2)
cacheSolve(cm)
setwd("~/Documents/R-Workspace/datasciencecoursera/Reproducible Research/RepData_PeerAssessment1")
rdata <- read.csv("./activity.csv", header = T)
rdata$date <- strptime(rdata$date, "%Y-%m-%d")
rdata$weekdayOrNot <- factor(ifelse(!weekdays(rdata$date) %in% c("Saturday", "Sunday"), "Weekday", "Weekend"))
library(ggplot2)
qplot(date, steps, data = rdata, geom = "bar", stat = "identify")
qplot(date, steps, data = rdata, geom = "bar", stat = "identity")
qplot(date, steps, data = rdata, geom = "histgram", stat = "identity")
qplot(date, steps, data = rdata, geom = "histgram", stat = "identity")
qplot(date, steps, data = rdata, geom = "histogram", stat = "identity")
qplot(date, steps, data = rdata, geom = "histogram", stat = "identity", colour=weekdayOrNot)
qplot(date, steps, data = rdata, geom = "histogram", stat = "identity", fill=weekdayOrNot)
qplot(date, steps, data = rdata, geom = "histogram", stat = "identity", fill=weekdayOrNot, title="Total number of steps taken each day")
?qplot
qplot(date, steps, data = rdata, geom = "histogram", stat = "identity", fill=weekdayOrNot, main = "Total number of steps taken each day")
meanOfTotal <- mean(rdata$steps, na.rm=T)
meanOfTotal
medianOfTotal <- sum(rdata$steps) / 2
medianOfTotal
medianOfTotal <- sum(rdata$steps, na.rm = T) / 2
medianOfTotal
medianOfTotal <- quantile(rdata$steps, probs = c(0.5), na.rm = T)
medianOfTotal
quantile(rdata$steps)
quantile(rdata$steps, na.rm=T)
medianOfTotal <- max(rdata$steps, na.rm = T) / 2
medianOfTotal
rdata
head(rdata)
qplot(interval, steps, data = rdata, geom="plot")
qplot(interval, steps, data = rdata)
qplot(interval, steps, data = rdata, stat="function", fun=mean)
library(plyr)
?ddply
mdata <- ddply(rdata, interval, summarize, mean(steps, na.rm=T))
rdata$interval <- factor(rdata$interval)
str(rdata)
mdata <- ddply(rdata, interval, summarize, mean(steps, na.rm=T))
mdata <- ddply(rdata, "interval", summarize, mean(steps, na.rm=T))
head(mdata)
mdata <- ddply(rdata, "interval", summarize, steps_mean=mean(steps, na.rm=T))
mdata
qplot(interval, steps_mean, data = mdata, stat="function", fun=mean)
qplot(interval, steps_mean, data = mdata, stat="identity")
rdata <- read.csv("./activity.csv", header = T)
rdata$date <- strptime(rdata$date, "%Y-%m-%d")
rdata$weekdayOrNot <- factor(ifelse(!weekdays(rdata$date) %in% c("Saturday", "Sunday"), "Weekday", "Weekend"))
mdata <- ddply(rdata, "interval", summarize, steps_mean=mean(steps, na.rm=T))
qplot(interval, steps_mean, data = mdata, stat="identity")
meanByInterval <- ddply(rdata, "interval", summarize, steps_mean=mean(steps, na.rm=T))
meanByInterval[,max(meanByInterval$steps_mean)]
max(meanByInterval$steps_mean)
meanByInterval[,meanByInterval$steps_mean == max(meanByInterval$steps_mean)]
subset(meanByInterval, subset = "steps_mean==max(meanByInterval$steps_mean)")
subset(meanByInterval, subset = steps_mean==max(meanByInterval$steps_mean))
subset(meanByInterval, subset = steps_mean==max(meanByInterval$steps_mean), select = interval)
subset(meanByInterval, subset = steps_mean==max(meanByInterval$steps_mean), select = interval)[1]
subset(meanByInterval, subset = steps_mean==max(meanByInterval$steps_mean), select = interval)[[1]]
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g + geom_point()
?geom_vline
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean))
intervalWithMaxMean <- subset(meanByInterval, subset = steps_mean==max(meanByInterval$steps_mean), select = interval)[[1]]
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean))
maxMeanByInterval <- max(meanByInterval$steps_mean)
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean))+ annotate("text", x = intervalWithMaxMean, y = maxMeanByInterval, label = c("max mean"))
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean))+ annotate("text", x = intervalWithMaxMean + 5, y = maxMeanByInterval, label = c("max mean"))
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean))+ annotate("text", x = intervalWithMaxMean + 15, y = maxMeanByInterval, label = c("max mean"))
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean))+ annotate("text", x = intervalWithMaxMean + 150, y = maxMeanByInterval, label = c("max mean"))
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean))+ annotate("text", x = intervalWithMaxMean + 250, y = maxMeanByInterval, label = c("max mean"))
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")+ annotate("text", x = intervalWithMaxMean + 250, y = maxMeanByInterval, label = c("max mean"))
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")+ annotate("text", x = intervalWithMaxMean + 250, y = maxMeanByInterval, label = c("max mean"), colour="red")
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")+ annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval, label = c("max mean"), colour="red")
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red") + geom_hline(aes(yintercept=intervalWithMaxMean), colour="red") + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval, label = c("max mean"), colour="red")
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red") + geom_hline(aes(yintercept=maxMeanByInterval), colour="red") + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval, label = c("max mean"), colour="red")
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red") + geom_hline(aes(yintercept=maxMeanByInterval), colour="red") + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 20, label = c("max mean"), colour="red")
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red") + geom_hline(aes(yintercept=maxMeanByInterval), colour="red") + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 10, label = c("max mean"), colour="red")
g + geom_point() + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red") + geom_hline(aes(yintercept=maxMeanByInterval), colour="red") + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 5, label = c("max mean"), colour="red")
g <- g + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red", show_guide = T)
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + geom_point()
g <- g + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red", show_guide = T)
g <- g + geom_hline(aes(yintercept=maxMeanByInterval), colour="red")
g <- g + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 5, label = c("max mean"), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + geom_point()
g <- g + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")
g <- g + geom_hline(aes(yintercept=maxMeanByInterval), colour="red")
g <- g + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 5, label = paste("(",intervalWithMaxMean, ",", maxMeanByInterval,")"), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + geom_point()
g <- g + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")
g <- g + geom_hline(aes(yintercept=maxMeanByInterval), colour="red")
g <- g + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 5, label = paste("(",intervalWithMaxMean, ",", round(maxMeanByInterval,2),")"), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + geom_point()
g <- g + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")
g <- g + geom_hline(aes(yintercept=maxMeanByInterval), colour="red")
g <- g + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 5, label = paste("(",intervalWithMaxMean, ",", round(maxMeanByInterval),")"), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")
g <- g + geom_hline(aes(yintercept=maxMeanByInterval), colour="red")
g <- g + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 5, label = paste("(",intervalWithMaxMean, ",", round(maxMeanByInterval),")"), colour="red")
g
g + annotate("pointrange", x = intervalWithMaxMean, y = maxMeanByInterval, ymin = 0, colour = "red", size = 1.5)
g + annotate("pointrange", x = intervalWithMaxMean, y = maxMeanByInterval, colour = "red", size = 1.5)
g + annotate("pointrange", x = intervalWithMaxMean, y = maxMeanByInterval, ymin = 0, ymax=200 colour = "red", size = 1.5)
g + annotate("pointrange", x = intervalWithMaxMean, y = maxMeanByInterval, ymin = 0, ymax=200, colour = "red", size = 1.5)
g + annotate("pointrange", x = intervalWithMaxMean, y = maxMeanByInterval, ymin = 0, ymax=200,xmin = 0, xmax=200 colour = "red", size = 1.5)
g + annotate("pointrange", x = intervalWithMaxMean, y = maxMeanByInterval, ymin = 0, ymax=200,xmin = 0, xmax=200, colour = "red", size = 1.5)
g + annotate("pointrange", x = intervalWithMaxMean, y = maxMeanByInterval, ymin = 0, ymax=200,xmin = 0, xmax=2000, colour = "red", size = 1.5)
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g + annotate("pointrange", x = intervalWithMaxMean, y = maxMeanByInterval, ymin = 0, ymax=200,xmin = 0, xmax=2000, colour = "red", size = 1.5)
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")
g <- g + geom_hline(aes(yintercept=maxMeanByInterval), colour="red")
g <- g + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 5, label = paste("(",intervalWithMaxMean, ",", round(maxMeanByInterval),")"), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")
g <- g + geom_hline(aes(yintercept=maxMeanByInterval), colour="red")
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=0,just=0)
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=5,just=0)
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=0,just=0+5)
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=0,just=5)
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=0,just=25)
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=0,just=250)
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=0,just=0, colour = "red")
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=0,just=0, colour = "red")
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=-1,just=0, colour = "red")
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=-0.5,just=0, colour = "red")
g + geom_text(aes(label=ifelse(steps_mean==maxMeanByInterval,as.character(interval),'')),hjust=-0.2,just=0, colour = "red")
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval + 5, label = paste("(",intervalWithMaxMean, ",", round(maxMeanByInterval),")"), colour="red")
g <- g + geom_vline(aes(xintercept=intervalWithMaxMean), colour="red")
g <- g + geom_hline(aes(yintercept=maxMeanByInterval), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + geom_text(aes(x = intervalWithMaxMean, y = maxMeanByInterval, label=paste("interval =", intervalWithMaxMean)), colour = "red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + geom_text(aes(x = intervalWithMaxMean, y = maxMeanByInterval, label=paste("interval =", intervalWithMaxMean)), colour = "red", hjust=0, vjust=0)
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval, label = paste("interval =", intervalWithMaxMean)), colour="red")
g
g <- g + annotate("text", x = intervalWithMaxMean + 200, y = maxMeanByInterval, label = paste("interval =", intervalWithMaxMean), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean + 210, y = maxMeanByInterval, label = paste("interval =", intervalWithMaxMean), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean + 215, y = maxMeanByInterval, label = paste("interval =", intervalWithMaxMean), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean + 220, y = maxMeanByInterval, label = paste("interval =", intervalWithMaxMean), colour="red")
g
g <- g + annotate("text", x = intervalWithMaxMean + 230, y = maxMeanByInterval + 5, label = paste("interval =", intervalWithMaxMean), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean + 230, y = maxMeanByInterval + 2, label = paste("interval =", intervalWithMaxMean), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean + 230, y = maxMeanByInterval + 1, label = paste("interval =", intervalWithMaxMean), colour="red")
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean + 230, y = maxMeanByInterval + 1, label = paste("interval =", intervalWithMaxMean), colour="red", hjust = 0)
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean, y = maxMeanByInterval, label = paste("interval =", intervalWithMaxMean), colour="red", hjust = 0)
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean, y = maxMeanByInterval, label = paste("interval =", intervalWithMaxMean), colour="red", hjust = 0, vjust = 0)
g
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean, y = maxMeanByInterval, label = paste("interval =", intervalWithMaxMean), colour="red", hjust = 0, vjust = 1)
g
head(rdata)
rdata[,is.na(rdata$steps)]
rdata[is.na(rdata$steps),]
nrow(rdata[is.na(rdata$steps),])
rdataWithoutNA <- rdata
rdataWithoutNA$steps <- ifelse(is.na(rdataWithoutNA$steps), 0, rdataWithoutNA$steps)
head(rdataWithoutNA)
qplot(date, steps, data = rdataWithoutNA, geom = "histogram", stat = "identity", fill = weekdayOrNot, main = "Total number of steps taken each day")
meanOfTotal_NATo0 <- mean(rdataWithoutNA$steps, na.rm = T)
medianOfTotal_NATo0 <- max(rdataWithoutNA$steps, na.rm = T) / 2
rdataWithoutNA <- rdata
rdataWithoutNA$steps <- ifelse(is.na(rdataWithoutNA$steps), meanOfTotal, rdataWithoutNA$steps)
qplot(date, steps, data = rdataWithoutNA, geom = "histogram", stat = "identity", fill = weekdayOrNot, main = "Total number of steps taken each day")
meanOfTotal_NATo0 <- mean(rdataWithoutNA$steps, na.rm = T)
medianOfTotal_NATo0 <- max(rdataWithoutNA$steps, na.rm = T) / 2
head(rdataWithoutNA)
rdataWithoutNA <- rdata
rdataWithoutNA$steps <- ifelse(is.na(rdataWithoutNA$steps), medianOfTotal, rdataWithoutNA$steps)
qplot(date, steps, data = rdataWithoutNA, geom = "histogram", stat = "identity", fill = weekdayOrNot, main = "Total number of steps taken each day")
meanOfTotal_NATo0 <- mean(rdataWithoutNA$steps, na.rm = T)
medianOfTotal_NATo0 <- max(rdataWithoutNA$steps, na.rm = T) / 2
rdataWithoutNA <- rdata
rdataWithoutNA$steps <- ifelse(is.na(rdataWithoutNA$steps), meanOfTotal, rdataWithoutNA$steps)
qplot(date, steps, data = rdataWithoutNA, geom = "histogram", stat = "identity", fill = weekdayOrNot, main = "Total number of steps taken each day")
meanOfTotal_NATo0 <- mean(rdataWithoutNA$steps, na.rm = T)
medianOfTotal_NATo0 <- max(rdataWithoutNA$steps, na.rm = T) / 2
rdataWithoutNA <- rdata
rdataWithoutNA$steps <- ifelse(is.na(rdataWithoutNA$steps), meanOfTotal, rdataWithoutNA$steps)
qplot(date, steps, data = rdataWithoutNA, geom = "histogram", stat = "identity", fill = weekdayOrNot, main = "Total number of steps taken each day")
meanOfTotal_NATo0 <- mean(rdataWithoutNA$steps, na.rm = T)
medianOfTotal_NATo0 <- max(rdataWithoutNA$steps, na.rm = T) / 2
g <- ggplot(meanByInterval, aes(interval, steps_mean))
g <- g + labs(title = "Mean of Steps By Interval")
g <- g + geom_point()
g <- g + annotate("text", x = intervalWithMaxMean, y = maxMeanByInterval, label = paste("interval =", intervalWithMaxMean), colour="red", hjust = 0, vjust = 1)
g
qplot(date, steps, data = rdata, geom = "histogram", stat = "identity", fill = weekdayOrNot, main = "Total number of steps taken each day")
qplot(date, steps, data = rdataWithoutNA, geom = "histogram", stat = "identity", fill = weekdayOrNot, main = "Total number of steps taken each day")
meanOfTotal_noNA <- mean(rdataWithoutNA$steps, na.rm = T)
medianOfTotal_noNA <- max(rdataWithoutNA$steps, na.rm = T) / 2
rdata_noNA <- rdata
rdata_noNA $steps <- ifelse(is.na(rdata_noNA$steps), meanOfTotal, rdata_noNA$steps)
meanByInterval_noNA <- ddply(rdata_noNA, "interval", summarize, steps_mean=mean(steps, na
.rm=T))
meanByInterval_noNA <- ddply(rdata_noNA, "interval", summarize, steps_mean=mean(steps, na.rm=T))
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean))
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_histogram(state = "identity")
g_noNA
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean))
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_histogram(stat = "identity")
g_noNA
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean))
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_line()
g_noNA
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean))
g_noNA <- g_noNA + facet_grid(weekdayOrNot ~ .)
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_line()
g_noNA
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean))
g_noNA <- g_noNA + facet_grid(. ~ weekdayOrNot)
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_line()
g_noNA
meanByInterval_noNA <- ddply(rdata_noNA, c("interval", "weekdayOrNot"), summarize, steps_mean=mean(steps, na.rm=T))
head(meanByInterval_noNA)
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean))
g_noNA <- g_noNA + facet_grid(. ~ weekdayOrNot)
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_line()
g_noNA
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean))
g_noNA <- g_noNA + facet_grid(weekdayOrNot ~ .)
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_line()
g_noNA
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean, colour=weekdayOrNot))
g_noNA <- g_noNA + facet_grid(weekdayOrNot ~ .)
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_line()
g_noNA
meanByInterval_noNA <- ddply(rdata_noNA, c("interval", "weekdayOrNot"), summarize, steps_mean=mean(steps, na.rm=T))
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean, colour=weekdayOrNot))
#g_noNA <- g_noNA + facet_grid(weekdayOrNot ~ .)
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_line()
g_noNA
meanByInterval_noNA <- ddply(rdata_noNA, c("interval", "weekdayOrNot"), summarize, steps_mean=mean(steps, na.rm=T))
g_noNA <- ggplot(meanByInterval_noNA, aes(interval, steps_mean, colour=weekdayOrNot))
g_noNA <- g_noNA + facet_grid(weekdayOrNot ~ .)
g_noNA <- g_noNA + labs(title = "Mean of Steps By Interval (NA replaced by mean)")
g_noNA <- g_noNA + geom_line()
g_noNA
library(knitr)
knit("PA1_template.Rmd", "PA1_template.md")
knit2html("PA1_template.Rmd")
